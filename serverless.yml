service: serverless-quotes-api

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  environment:
    QUOTES_TABLE: ${self:service}-project-quotes
    TEMPLATES_TABLE: ${self:service}-templates-quotes
    SECTIONS_TABLE: ${self:service}-sections
    PROJECTS_TABLE: ${self:service}-projects

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.QUOTES_TABLE}
            - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TEMPLATES_TABLE}
            - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SECTIONS_TABLE}
            - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PROJECTS_TABLE}


plugins:
  - serverless-offline

package:
  exclude:
    - src/**
    - test/**
  include:
    - dist/**
    - node_modules/**

functions:
  # Project Quotes
  createProjectQuote:
    handler: dist/src/handlers/projectQuotes/createProjectQuote.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId}/quotes
          method: post
  updateProjectQuote:
    handler: dist/src/handlers/projectQuotes/updateProjectQuote.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId}/quotes/{quoteId}
          method: put
  getProjectQuote:
    handler: dist/src/handlers/projectQuotes/getProjectQuote.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId}/quotes/{quoteId}
          method: get
  getAllProjectQuotes:
    handler: dist/src/handlers/projectQuotes/getAllProjectQuotes.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId}/quotes
          method: get
  deleteProjectQuote:
    handler: dist/src/handlers/projectQuotes/deleteProjectQuote.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId}/quotes/{quoteId}
          method: delete
  # Template Quotes
  createTemplateQuote:
    handler: dist/src/handlers/templateQuotes/createTemplateQuote.handler
    timeout: 30
    events:
      - http:
          path: templates/quotes
          method: post
  updateTemplateQuote:
    handler: dist/src/handlers/templateQuotes/updateTemplateQuote.handler
    timeout: 30
    events:
      - http:
          path: templates/quotes/{quoteId}
          method: put
  getTemplateQuote:
    handler: dist/src/handlers/templateQuotes/getTemplateQuote.handler
    timeout: 30
    events:
      - http:
          path: templates/quotes/{quoteId}
          method: get
  deleteTemplateQuote:
    handler: dist/src/handlers/templateQuotes/deleteTemplateQuote.handler
    timeout: 30
    events:
      - http:
          path: templates/quotes/{quoteId}
          method: delete

  # Project
  createProject:
    handler: dist/src/handlers/ProjectHandlers/createProject.handler
    timeout: 30
    events:
      - http:
          path: projects
          method: post
  getProject:
    handler: dist/src/handlers/ProjectHandlers/getProject.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId}
          method: get
  updateProject:
    handler: dist/src/handlers/ProjectHandlers/updateProject.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId} 
          method: put
  deleteProject:
    handler: dist/src/handlers/ProjectHandlers/deleteProject.handler
    timeout: 30
    events:
      - http:
          path: projects/{projectId}
          method: delete



resources:
  Resources:
    # Quotes Table 
    QuotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.QUOTES_TABLE}
        AttributeDefinitions:
          - AttributeName: quoteId
            AttributeType: S
          - AttributeName: projectId
            AttributeType: S
        KeySchema:
          - AttributeName: quoteId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ProjectIndex
            KeySchema:
              - AttributeName: projectId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      
    # Templates Table
    TemplatesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TEMPLATES_TABLE}
        AttributeDefinitions:
          - AttributeName: quoteId
            AttributeType: S
        KeySchema:
          - AttributeName: quoteId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    # Sections Table
    SectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SECTIONS_TABLE}
        AttributeDefinitions:
          - AttributeName: quoteId
            AttributeType: S
        KeySchema:
          - AttributeName: quoteId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    ProjectsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PROJECTS_TABLE}
        AttributeDefinitions:
          - AttributeName: projectId
            AttributeType: S
        KeySchema:
          - AttributeName: projectId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      
